plugins {
	id 'java'
	id 'java-library'
	id 'maven-publish'
	id 'application'
	id 'com.github.johnrengelman.shadow' version '7.1.0'
}

group 'cc.sukazyo'
version VERSION
project.ext.archiveBaseName = 'System_iCee'
project.ext.artifactId = 'icee-core'
mainClassName = 'cc.sukazyo.icee.iCee'

repositories {
	mavenCentral()
	google()
	maven { name '-ws'; url 'https://mvn.sukazyo.cc' }
}

dependencies {
	
	// 单元测试核心类库
	testImplementation platform("org.junit:junit-bom:${junitJupiterVersion}")
	testImplementation "org.junit.jupiter:junit-jupiter:${junitJupiterVersion}"
	
	// javax.annotation.Nonnull&Nullable ..yes.
	compileOnlyApi "com.github.spotbugs:spotbugs-annotations:${spotbugsVersion}"
	
	// (好像没用了..?)
	implementation "com.google.code.gson:gson:${gsonVersion}"
	// 配置文件 hocon 解析类库
	implementation "com.typesafe:config:${typesafeVersion}"
	// log 核心类库
	compileOnlyApi "org.apache.logging.log4j:log4j-api:${log4jVersion}"
	implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
	// jar内资源文件读取
	implementation "cc.sukazyo:resource-tools:${resToolsVersion}"
	
}

java {
	withSourcesJar()
}

tasks.withType(JavaCompile) {
	options.encoding = "UTF-8"
}

tasks.withType(Javadoc) {
	options.encoding = 'UTF-8'
	options.docEncoding = 'UTF-8'
	options.charSet = 'UTF-8'
}

tasks.test {
	useJUnitPlatform()
}

shadowJar {
	archiveBaseName.set("${project.ext.archiveBaseName}")
	archiveVersion.set("${VERSION}")
	archiveClassifier.set("fat")
}

publishing {
	repositories{
		maven {
			name 'builds'
			url = "file://" + new File("./build/publishing").getAbsolutePath()
		}
		maven {
			name '-ws-'
			url publishMvnRepoUrl
			credentials {
				username publishMvnRepoUsername
				password publishMvnRepoPassword
			}
		}
	}
	publications {
		main (MavenPublication) {
			from components.java
			groupId = project.group
			artifactId = project.ext.artifactId
			version = project.version
		}
	}
}
